{"version":3,"sources":["circle.ts","create-canvas.ts","utils.ts","particle.ts","index.ts"],"names":[],"mappings":"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","file":"click-fireworks.min.js","sourceRoot":"../src","sourcesContent":["export class Circle {\n  x: number;\n  y: number;\n  radius: number;\n  duration = 500;\n  startTime = Date.now();\n  ended = false;\n  speed = {\n    radius: 3\n  };\n  color: string;\n\n  constructor(x = 0, y = 0, radius = 10, color = '#00bcd4') {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color;\n  }\n\n  draw(canvasCtx: CanvasRenderingContext2D) {\n    let progress = 1 - (Date.now() - this.startTime) / this.duration;\n    progress = progress > 0 ? progress : 0;\n    canvasCtx.save();\n    canvasCtx.globalAlpha = progress;\n    canvasCtx.strokeStyle = this.color;\n    canvasCtx.lineWidth =\n      4 * (1 - (Date.now() - this.startTime) / this.duration);\n    canvasCtx.beginPath();\n    canvasCtx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    canvasCtx.stroke();\n    canvasCtx.restore();\n    if (progress === 0) {\n      this.ended = true;\n    } else {\n      this.radius += this.speed.radius;\n    }\n  }\n}","export function createCanvas() {\n  const $canvas = document.createElement('canvas');\n  $canvas.className = 'click_fire'\n  $canvas.style.pointerEvents = 'none';\n  $canvas.style.position = 'fixed';\n  $canvas.style.left = '0px';\n  $canvas.style.top = '0px';\n  $canvas.style.right = '0px';\n  $canvas.style.bottom = '0px';\n  $canvas.style.width = '100%';\n  $canvas.style.height = '100%'\n  $canvas.style.zIndex = '9999999';\n\n  document.body.appendChild($canvas);\n  return $canvas;\n}","export function random(n: number) {\n  return Math.random() * n * 2 - n;\n}\n","import { random } from './utils';\n\nexport class Particle {\n  x: number;\n  y: number;\n  radius: number;\n  startRadius: number;\n  ended = false;\n  color: string;\n\n  speed = {\n    x: random(5),\n    y: random(5),\n    radius: 0.5\n  };\n\n  constructor(x = 0, y = 0, radius = 10, color = '#00bcd4') {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.startRadius = radius;\n    this.color = color;\n  }\n\n  draw(canvasCtx: CanvasRenderingContext2D) {\n    canvasCtx.save();\n    canvasCtx.globalAlpha = this.radius / this.startRadius;\n    canvasCtx.fillStyle = this.color;\n    if (this.ended) return;\n    canvasCtx.beginPath();\n    canvasCtx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    canvasCtx.fill();\n    canvasCtx.restore();\n\n    this.x += this.speed.x;\n    this.y += this.speed.y;\n    this.radius -= this.speed.radius;\n\n    if (this.radius < 0) {\n      this.ended = true;\n    }\n  }\n}\n","import { Circle } from './circle';\nimport { createCanvas } from './create-canvas';\nimport { Particle } from './particle';\nimport { random } from './utils';\n\nconst $canvas = createCanvas();\nconst ctx = $canvas.getContext('2d')!;\nconst DPR = window.devicePixelRatio || 3;\nconst particleSet: Set<Particle> = new Set();\nconst circleSet: Set<Circle> = new Set();\n\nfunction createParticles(x: number, y: number, count: number) {\n  for (let i = 0; i < count; i++) {\n    particleSet.add(\n      new Particle(\n        x + random(10),\n        y + random(10),\n        5 + Math.round(Math.random() * 10)\n      )\n    );\n  }\n}\n\nfunction update() {\n  ctx.clearRect(0, 0, $canvas.width, $canvas.height);\n  for (const particle of particleSet.values()) {\n    particle.draw(ctx);\n    if (particle.ended) {\n      particleSet.delete(particle);\n    }\n  }\n  for (const circle of circleSet.values()) {\n    circle.draw(ctx);\n    if (circle.ended) {\n      circleSet.delete(circle);\n    }\n  }\n  window.requestAnimationFrame(update);\n}\n\nwindow.addEventListener('click', (event) => {\n  $canvas.width = window.innerWidth * DPR;\n  $canvas.height = window.innerHeight * DPR;\n  ctx.scale(DPR, DPR);\n  const { pageX, pageY } = event;\n  createParticles(pageX, pageY, 40);\n  circleSet.add(new Circle(pageX, pageY, 0));\n});\n\nwindow.requestAnimationFrame(update);\n "]}